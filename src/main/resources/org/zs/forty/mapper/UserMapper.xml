<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zs.forty.mapper.UserMapper">
  <resultMap id="BaseUserMap" type="org.zs.forty.model.entity.User">
    <id property="id" column="id"/>
    <result property="username" column="username"/>
    <result property="password" column="password"/>
    <result property="nickname" column="nickname"/>
    <result property="email" column="email"/>
    <result property="status" column="status"/>
    <result property="isDelete" column="is_delete"/>
    <result property="createTime" column="create_time"/>
    <result property="updateTime" column="update_time"/>
    <collection property="roles" ofType="org.zs.forty.model.entity.Role">
      <id property="roleId" column="role_id" jdbcType="BIGINT"/>
      <result property="roleName" column="role_name"/>
      <result property="roleDesc" column="role_desc"/>
      <result property="isDelete" column="is_delete"/>
      <result property="createTime" column="create_time"/>
      <result property="updateTime" column="update_time"/>
    </collection>
  </resultMap>

  <sql id="BaseUser">
    id,username,password,nickname,email,status,is_delete,create_time,update_time
  </sql>
  <insert id="insert" useGeneratedKeys="true" parameterType="org.zs.forty.model.entity.User"
      keyProperty="id">
    INSERT INTO t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null and username != ''">
        username,
      </if>
      <if test="password != null and password != ''">
        password,
      </if>
      <if test="nickname != null and nickname != ''">
        nickname,
      </if>
      <if test="email != null and email != ''">
        email,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      <if test="username != null and username != ''">
        #{username},
      </if>
      <if test="password != null and password != ''">
        #{password},
      </if>
      <if test="nickname != null and nickname != ''">
        #{nickname},
      </if>
      <if test="email != null and email != ''">
        #{email},
      </if>
    </trim>
  </insert>
  <update id="updateById">
    UPDATE t_user
    <set>
      <if test="username != null">
        username = #{username},
      </if>
      <if test="password != null">
        password = #{password},
      </if>
      <if test="nickname != null">
        nickname = #{nickname},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
    </set>
    WHERE id = #{id}
    AND is_delete = 0
  </update>
  <update id="deleteById">
    UPDATE t_user SET is_delete = 1 WHERE id = #{id} AND is_delete = 0
  </update>
  <select id="selectRoleByEmail" resultMap="BaseUserMap">
    SELECT
    u.id, u.username, u.password, u.nickname, u.email, u.status,
    r.role_id, r.role_name, r.role_desc
    FROM t_user u
    LEFT JOIN t_user_role ur
    ON u.id = ur.user_id
    LEFT JOIN t_role r
    ON ur.role_id = r.role_id
    WHERE u.is_delete = 0
    AND r.is_delete = 0
    AND u.email = #{email}

  </select>
  <select id="selectById" resultType="org.zs.forty.model.entity.User">
    SELECT
    <include refid="BaseUser"/>
    FROM t_user
    WHERE id = #{id}
    AND is_delete = 0
  </select>
  <select id="selectByUsername" resultType="org.zs.forty.model.entity.User">
    SELECT
    <include refid="BaseUser"/>
    FROM t_user
    WHERE username = #{username}
    AND is_delete = 0
  </select>
  <select id="selectList" resultType="org.zs.forty.model.entity.User">
    SELECT
    <include refid="BaseUser"/>
    FROM t_user
    WHERE is_delete = 0
  </select>
  <select id="selectByEmail" resultType="org.zs.forty.model.entity.User">
    SELECT
    <include refid="BaseUser"/>
    FROM t_user
    WHERE email = #{email}
    AND is_delete = 0
  </select>
  <select id="selectListByCondition" resultType="org.zs.forty.model.entity.User">
    SELECT
    <include refid="BaseUser"/>
    FROM t_user
    <where>
      is_delete = 0
      <if test="status!=null">
        AND status = #{status}
      </if>
      <if test="username!=null and username!=''">
        AND username like #{username}
      </if>
      <if test="nickname!=null and nickname!=''">
        AND nickname like #{nickname}
      </if>
      <if test="email!=null and email!=''">
        AND email like #{email}
      </if>
    </where>
  </select>
</mapper>